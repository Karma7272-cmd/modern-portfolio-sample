import React, { useState, useEffect } from 'react';
import { Mail, Github, Linkedin, Twitter, Sun, Moon, Menu, X } from 'lucide-react';

// DUMMY DATA //////////////////////////////////////////////////////////////////
const portfolioData = {
    name: "Alex Doe",
    role: "Full-Stack Developer",
    bio: "I'm a passionate developer with a knack for creating elegant and efficient solutions. I specialize in building modern web applications with a focus on user experience and performance.",
    contact: {
        email: "alex.doe@example.com",
        social: {
            github: "https://github.com/alexdoe",
            linkedin: "https://linkedin.com/in/alexdoe",
            twitter: "https://twitter.com/alexdoe",
        }
    },
    projects: [
        {
            title: "E-commerce Platform",
            description: "A feature-rich online shopping platform with a modern UI, product catalog, shopping cart, and secure checkout.",
            technologies: ["React", "Node.js", "Express", "MongoDB", "Tailwind CSS"],
            liveUrl: "#",
            repoUrl: "#",
            imageUrl: "https://placehold.co/600x400/1e293b/ffffff?text=E-commerce"
        },
        {
            title: "Project Management Tool",
            description: "A collaborative tool for teams to manage tasks, track progress, and communicate effectively.",
            technologies: ["Vue.js", "Firebase", "Vuetify"],
            liveUrl: "#",
            repoUrl: "#",
            imageUrl: "https://placehold.co/600x400/1e293b/ffffff?text=Project+Tool"
        },
        {
            title: "Personal Blog",
            description: "A clean and minimalist blog built with a static site generator for speed and security.",
            technologies: ["Gatsby", "GraphQL", "Markdown", "Netlify"],
            liveUrl: "#",
            repoUrl: "#",
            imageUrl: "https://placehold.co/600x400/1e293b/ffffff?text=Personal+Blog"
        },
        {
            title: "Data Visualization Dashboard",
            description: "An interactive dashboard for visualizing complex datasets using D3.js, providing insightful analytics.",
            technologies: ["React", "D3.js", "Python", "Flask"],
            liveUrl: "#",
            repoUrl: "#",
            imageUrl: "https://placehold.co/600x400/1e293b/ffffff?text=Data+Dashboard"
        }
    ],
    skills: [
        "JavaScript (ES6+)", "React", "Node.js", "Python", "HTML5 & CSS3",
        "Tailwind CSS", "SQL", "NoSQL", "Git & GitHub", "Docker", "AWS", "REST APIs"
    ]
};

// HELPER COMPONENTS ///////////////////////////////////////////////////////////

const Section = ({ id, children, className = '' }) => (
    <section id={id} className={`py-16 md:py-24 ${className}`}>
        <div className="container mx-auto px-4 md:px-8">
            {children}
        </div>
    </section>
);

const SectionTitle = ({ children }) => (
    <h2 className="text-3xl md:text-4xl font-bold mb-12 text-center text-slate-800 dark:text-slate-200">
        {children}
    </h2>
);

// MAIN COMPONENTS /////////////////////////////////////////////////////////////

const Header = ({ darkMode, setDarkMode }) => {
    const [isMenuOpen, setIsMenuOpen] = useState(false);
    const [isScrolled, setIsScrolled] = useState(false);

    const navLinks = [
        { href: "#about", label: "About" },
        { href: "#projects", label: "Projects" },
        { href: "#skills", label: "Skills" },
        { href: "#contact", label: "Contact" },
    ];

    useEffect(() => {
        const handleScroll = () => {
            setIsScrolled(window.scrollY > 10);
        };
        window.addEventListener('scroll', handleScroll);
        return () => window.removeEventListener('scroll', handleScroll);
    }, []);

    const NavLink = ({ href, label }) => (
        <a
            href={href}
            onClick={() => setIsMenuOpen(false)}
            className="text-slate-600 dark:text-slate-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-300 py-2"
        >
            {label}
        </a>
    );

    return (
        <header className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${isScrolled ? 'bg-white/80 dark:bg-slate-900/80 backdrop-blur-sm shadow-md' : 'bg-transparent'}`}>
            <div className="container mx-auto px-4 md:px-8">
                <div className="flex justify-between items-center h-16">
                    <a href="#" className="text-xl font-bold text-slate-800 dark:text-slate-200">
                        {portfolioData.name}
                    </a>
                    <nav className="hidden md:flex items-center space-x-6">
                        {navLinks.map(link => <NavLink key={link.href} {...link} />)}
                    </nav>
                    <div className="flex items-center space-x-4">
                         <button onClick={() => setDarkMode(!darkMode)} className="p-2 rounded-full text-slate-600 dark:text-slate-300 hover:bg-slate-200 dark:hover:bg-slate-700 transition-colors duration-300">
                            {darkMode ? <Sun size={20} /> : <Moon size={20} />}
                        </button>
                        <button onClick={() => setIsMenuOpen(!isMenuOpen)} className="md:hidden p-2 rounded-md text-slate-600 dark:text-slate-300">
                            {isMenuOpen ? <X size={24} /> : <Menu size={24} />}
                        </button>
                    </div>
                </div>
            </div>
            {/* Mobile Menu */}
            {isMenuOpen && (
                <div className="md:hidden bg-white dark:bg-slate-900 shadow-lg">
                    <nav className="flex flex-col items-center space-y-4 p-4">
                        {navLinks.map(link => <NavLink key={link.href} {...link} />)}
                    </nav>
                </div>
            )}
        </header>
    );
};

const Hero = () => (
    <Section id="hero" className="min-h-screen flex items-center bg-slate-50 dark:bg-slate-800/50 pt-16">
        <div className="text-center w-full">
            <div className="relative inline-block mb-8">
                 <img
                    src={`https://placehold.co/160x160/e2e8f0/334155?text=${portfolioData.name.split(' ').map(n=>n[0]).join('')}`}
                    alt={portfolioData.name}
                    className="w-40 h-40 rounded-full object-cover border-4 border-white dark:border-slate-700 shadow-lg"
                />
                <div className="absolute bottom-0 right-0 bg-blue-600 text-white p-2 rounded-full shadow-md">
                    <span className="w-4 h-4 block animate-ping absolute -top-0.5 -right-0.5 bg-blue-500 rounded-full opacity-75"></span>
                    <span className="w-4 h-4 block bg-blue-600 rounded-full"></span>
                </div>
            </div>
            <h1 className="text-4xl md:text-6xl font-extrabold text-slate-900 dark:text-white mb-4">
                Hi, I'm {portfolioData.name}
            </h1>
            <p className="text-xl md:text-2xl text-slate-600 dark:text-slate-300 mb-8 max-w-3xl mx-auto">
                {portfolioData.role}
            </p>
            <div className="flex justify-center space-x-4">
                <a href="#contact" className="bg-blue-600 text-white font-semibold px-8 py-3 rounded-full hover:bg-blue-700 transition-all duration-300 transform hover:scale-105 shadow-lg">
                    Get In Touch
                </a>
                <a href="#projects" className="bg-white dark:bg-slate-700 text-slate-700 dark:text-slate-200 font-semibold px-8 py-3 rounded-full hover:bg-slate-100 dark:hover:bg-slate-600 transition-all duration-300 transform hover:scale-105 shadow-lg">
                    View My Work
                </a>
            </div>
        </div>
    </Section>
);

const About = () => (
    <Section id="about">
        <SectionTitle>About Me</SectionTitle>
        <div className="max-w-3xl mx-auto text-center text-lg text-slate-600 dark:text-slate-400 leading-relaxed">
            <p>{portfolioData.bio}</p>
        </div>
    </Section>
);

const ProjectCard = ({ project }) => (
    <div className="bg-white dark:bg-slate-800 rounded-lg shadow-lg overflow-hidden transform hover:-translate-y-2 transition-transform duration-300">
        <img src={project.imageUrl} alt={project.title} className="w-full h-48 object-cover" onError={(e) => { e.target.onerror = null; e.target.src = 'https://placehold.co/600x400/1e293b/ffffff?text=Image+Error'; }}/>
        <div className="p-6">
            <h3 className="text-xl font-bold mb-2 text-slate-800 dark:text-slate-200">{project.title}</h3>
            <p className="text-slate-600 dark:text-slate-400 mb-4 text-sm">{project.description}</p>
            <div className="mb-4 flex flex-wrap gap-2">
                {project.technologies.map(tech => (
                    <span key={tech} className="bg-blue-100 dark:bg-blue-900/50 text-blue-800 dark:text-blue-300 text-xs font-semibold px-2.5 py-0.5 rounded-full">
                        {tech}
                    </span>
                ))}
            </div>
            <div className="flex justify-end space-x-4 mt-4">
                <a href={project.repoUrl} target="_blank" rel="noopener noreferrer" className="text-slate-500 dark:text-slate-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-300">
                    Source Code
                </a>
                <a href={project.liveUrl} target="_blank" rel="noopener noreferrer" className="text-blue-600 dark:text-blue-400 font-semibold hover:underline">
                    Live Demo
                </a>
            </div>
        </div>
    </div>
);

const Projects = () => (
    <Section id="projects" className="bg-slate-50 dark:bg-slate-800/50">
        <SectionTitle>My Projects</SectionTitle>
        <div className="grid md:grid-cols-2 lg:grid-cols-2 gap-8">
            {portfolioData.projects.map((project, index) => (
                <ProjectCard key={index} project={project} />
            ))}
        </div>
    </Section>
);

const Skills = () => (
    <Section id="skills">
        <SectionTitle>Skills</SectionTitle>
        <div className="max-w-4xl mx-auto">
            <div className="flex flex-wrap justify-center gap-4">
                {portfolioData.skills.map(skill => (
                    <div key={skill} className="bg-slate-100 dark:bg-slate-700 text-slate-700 dark:text-slate-200 px-4 py-2 rounded-md font-medium shadow-sm">
                        {skill}
                    </div>
                ))}
            </div>
        </div>
    </Section>
);

const Contact = () => (
    <Section id="contact" className="bg-slate-50 dark:bg-slate-800/50">
        <SectionTitle>Get In Touch</SectionTitle>
        <div className="max-w-xl mx-auto text-center">
            <p className="text-slate-600 dark:text-slate-400 mb-8">
                I'm currently open to new opportunities. If you have a project in mind or just want to say hi, feel free to reach out!
            </p>
            <a href={`mailto:${portfolioData.contact.email}`} className="inline-block bg-blue-600 text-white font-bold text-lg px-8 py-4 rounded-full hover:bg-blue-700 transition-all duration-300 transform hover:scale-105 shadow-lg mb-12">
                <div className="flex items-center gap-2">
                    <Mail size={20} />
                    <span>{portfolioData.contact.email}</span>
                </div>
            </a>
            <div className="flex justify-center space-x-6">
                <a href={portfolioData.contact.social.github} target="_blank" rel="noopener noreferrer" className="text-slate-500 dark:text-slate-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-300">
                    <Github size={28} />
                </a>
                <a href={portfolioData.contact.social.linkedin} target="_blank" rel="noopener noreferrer" className="text-slate-500 dark:text-slate-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-300">
                    <Linkedin size={28} />
                </a>
                <a href={portfolioData.contact.social.twitter} target="_blank" rel="noopener noreferrer" className="text-slate-500 dark:text-slate-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-300">
                    <Twitter size={28} />
                </a>
            </div>
        </div>
    </Section>
);

const Footer = () => (
    <footer className="bg-slate-100 dark:bg-slate-900 text-center py-6">
        <div className="container mx-auto px-4 md:px-8">
            <p className="text-slate-600 dark:text-slate-400 text-sm">
                &copy; {new Date().getFullYear()} {portfolioData.name}. All Rights Reserved.
            </p>
        </div>
    </footer>
);


// MAIN APP COMPONENT //////////////////////////////////////////////////////////
export default function App() {
    const [darkMode, setDarkMode] = useState(false);

    useEffect(() => {
        if (darkMode) {
            document.documentElement.classList.add('dark');
            document.documentElement.style.setProperty('color-scheme', 'dark');
        } else {
            document.documentElement.classList.remove('dark');
            document.documentElement.style.setProperty('color-scheme', 'light');
        }
    }, [darkMode]);

    useEffect(() => {
        // Smooth scrolling for anchor links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const targetId = this.getAttribute('href');
                const targetElement = document.querySelector(targetId);
                if (targetElement) {
                    targetElement.scrollIntoView({
                        behavior: 'smooth'
                    });
                }
            });
        });
    }, []);


    return (
        <div className="bg-white dark:bg-slate-900 font-sans leading-normal tracking-tight transition-colors duration-500">
            <Header darkMode={darkMode} setDarkMode={setDarkMode} />
            <main>
                <Hero />
                <About />
                <Projects />
                <Skills />
                <Contact />
            </main>
            <Footer />
        </div>
    )
}
